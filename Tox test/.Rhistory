x <- barplot(table(mtcars$cyl), xaxt="n")
labs <- paste(names(table(mtcars$cyl)), "cylinders")
text(cex=1, x=colMeans(x)-.25, y=-1.25, labs, xpd=TRUE, srt=45)
help(text)
def.par <- par(no.readonly = TRUE)
## divide device into two rows and 1 column
## allocate figure 1  for barplot
## allocate figure 2 for barplot labels
## respect relations between widths and heights
nf <- layout(matrix(c(1,1,2,2),2,2,byrow = TRUE), c(1,3), c(3,1), TRUE)
layout.show(nf)
## barplot
par(mar = c(0,1,1,1))
xx <- barplot(data, beside=TRUE, ylim=c(140,170),
xpd=FALSE, col=col,
las=2, ylab="Cu Concentration(ug/L)",
xlab="Clonal Line", xaxt='n')
## labels , create d ummy plot for sacles
par(mar = c(1,1,0,1))
plot(seq_len(length(xx)),rep(1,length(xx)),type='n',axes=FALSE)
## Create some text labels
labels <- colnames(data)
## Plot text labels with some rotation at the top of the current figure
text(seq(1,42,by=2),rep(1.4,length(xx)/2), srt = 90, adj = 1,
labels = labels, xpd = TRUE,cex=0.8,srt=60,
col=c("darkred","red","grey20","grey40"))
par(def.par)  #- reset to default
def.par <- par(no.readonly = TRUE)
## divide device into two rows and 1 column
## allocate figure 1  for barplot
## allocate figure 2 for barplot labels
## respect relations between widths and heights
nf <- layout(matrix(c(1,1,2,2),2,2,byrow = TRUE), c(1,3), c(3,1), TRUE)
layout.show(nf)
## barplot
par(mar = c(0,1,1,1))
xx <- barplot(data, beside=TRUE, ylim=c(140,170),
xpd=FALSE, col=col,
las=2, ylab="Cu Concentration(ug/L)",
xlab="Clonal Line", xaxt='n')
## labels , create d ummy plot for sacles
par(mar = c(1,1,0,1))
plot(seq_len(length(xx)),rep(1,length(xx)),type='n',axes=FALSE)
## Create some text labels
labels <- colnames(data)
## Plot text labels with some rotation at the top of the current figure
text(seq(1,42,by=2),rep(1.4,length(xx)/2), srt = 90, adj = 1,
labels = labels, xpd = TRUE,cex=0.8,srt=60)
par(def.par)  #- reset to default
seq(1.5,42,2)
def.par <- par(no.readonly = TRUE)
## divide device into two rows and 1 column
## allocate figure 1  for barplot
## allocate figure 2 for barplot labels
## respect relations between widths and heights
nf <- layout(matrix(c(1,1,2,2),2,2,byrow = TRUE), c(1,3), c(3,1), TRUE)
layout.show(nf)
## barplot
par(mar = c(0,1,1,1))
xx <- barplot(data, beside=TRUE, ylim=c(140,170),
xpd=FALSE, col=col,
las=2, ylab="Cu Concentration(ug/L)",
xlab="Clonal Line", xaxt='n')
## labels , create d ummy plot for sacles
par(mar = c(1,1,0,1))
plot(seq_len(length(xx)),rep(1,length(xx)),type='n',axes=FALSE)
## Create some text labels
labels <- colnames(data)
## Plot text labels with some rotation at the top of the current figure
text(seq(1.5,42,by=2),rep(1.4,length(xx)/2), srt = 90, adj = 1,
labels = labels, xpd = TRUE,cex=0.8,srt=60)
par(def.par)  #- reset to default
legend("topright",
c("LC10 Ponds","LC50 Ponds", "LC10 Lakes", "LC50 Lakes"),
fill=c("darkolivegreen2","forestgreen","cadetblue1","cornflowerblue"),
cex=0.75,
inset=0.01)
def.par <- par(no.readonly = TRUE)
## divide device into two rows and 1 column
## allocate figure 1  for barplot
## allocate figure 2 for barplot labels
## respect relations between widths and heights
nf <- layout(matrix(c(1,1,2,2),2,2,byrow = TRUE), c(1,3), c(3,1), TRUE)
layout.show(nf)
## barplot
par(mar = c(0,1,1,1))
xx <- barplot(data, beside=TRUE, ylim=c(140,170),
xpd=FALSE, col=col,
las=2, ylab="Cu Concentration(ug/L)",
xlab="Clonal Line", xaxt='n')
legend("topright",
c("LC10 Ponds","LC50 Ponds", "LC10 Lakes", "LC50 Lakes"),
fill=c("darkolivegreen2","forestgreen","cadetblue1","cornflowerblue"),
cex=0.75,
inset=0.01)
## labels , create d ummy plot for sacles
par(mar = c(1,1,0,1))
plot(seq_len(length(xx)),rep(1,length(xx)),type='n',axes=FALSE)
## Create some text labels
labels <- colnames(data)
## Plot text labels with some rotation at the top of the current figure
text(seq(1.5,42,by=2),rep(1.4,length(xx)/2), srt = 90, adj = 1,
labels = labels, xpd = TRUE,cex=0.8,srt=60)
par(def.par)  #- reset to default
def.par <- par(no.readonly = TRUE)
## divide device into two rows and 1 column
## allocate figure 1  for barplot
## allocate figure 2 for barplot labels
## respect relations between widths and heights
nf <- layout(matrix(c(1,1,2,2),2,2,byrow = TRUE), c(1,3), c(3,1), TRUE)
layout.show(nf)
## barplot
par(mar = c(0,1,1,1))
xx <- barplot(data, beside=TRUE, ylim=c(140,170),
xpd=FALSE, col=col,
las=2, ylab="Cu Concentration(ug/L)",
xlab="Clonal Line", xaxt='n')
legend("topright",
c("LC10 Ponds","LC50 Ponds", "LC10 Lakes", "LC50 Lakes"),
fill=c("darkolivegreen2","forestgreen","cadetblue1","cornflowerblue"),
cex=0.9,
inset=0.05)
## labels , create d ummy plot for sacles
par(mar = c(1,1,0,1))
plot(seq_len(length(xx)),rep(1,length(xx)),type='n',axes=FALSE)
## Create some text labels
labels <- colnames(data)
## Plot text labels with some rotation at the top of the current figure
text(seq(1.5,42,by=2),rep(1.4,length(xx)/2), srt = 90, adj = 1,
labels = labels, xpd = TRUE,cex=0.8,srt=60)
par(def.par)  #- reset to default
xx <- barplot(data, beside=TRUE, ylim=c(140,170),
xpd=FALSE, col=col,
las=2, ylab="Cu Concentration(ug/L)",
xlab="Clonal Line", xaxt='n')
legend("topright",
c("LC10 Ponds","LC50 Ponds", "LC10 Lakes", "LC50 Lakes"),
fill=c("darkolivegreen2","forestgreen","cadetblue1","cornflowerblue"),
cex=0.9,
inset=0.05)
labels <- colnames(data)
## Plot text labels with some rotation at the top of the current figure
text(seq(1.5,42,by=2),rep(1.4,length(xx)/2), srt = 90, adj = 1,
labels = labels, xpd = TRUE,cex=0.8,srt=60)
axis(1,labels="Clones")
setwd("C:/Users/Piumi/OneDrive/McGill Academics/2013-2014/Honours/Tanks")
tankCounts<-read.csv("TankCounts2.csv")
tankCounts$Diversity<-as.factor(tankCounts$Diversity)
tankCounts$ID<-as.factor(tankCounts$ID)
tankCounts$Copper<-as.factor(tankCounts$Copper)
dates<-c(0,7,14,20,36)
max.days<-character(length=18)
r1<-numeric(length=18)
r2<-numeric(length=18)
r3<-numeric(length=18)
for (i in 1:18){
ind<-which.max(tankCounts[i,5:7])
ind<-which.max(tankCounts[i,5:8])
r2[i]<-log(tankCounts[i,ind+4]/48)/dates[ind]
r1[i]<-log(tankCounts[i,ind+4]/48)/dates[ind]
ind<-which.max(tankCounts[i,5:9])
r3[i]<-log(tankCounts[i,ind+4]/48)/dates[ind]
tankCounts$r1<-r1
}
tankCounts$r2<-r2
tankCounts$r3<-r3
tankCounts<-read.csv("TankCounts2.csv")
tankCounts$Diversity<-as.factor(tankCounts$Diversity)
tankCounts$ID<-as.factor(tankCounts$ID)
tankCounts$Copper<-as.factor(tankCounts$Copper)
dates<-c(0,7,14,20,36)
max.days<-character(length=18)
r1<-numeric(length=18)
r2<-numeric(length=18)
r3<-numeric(length=18)
for (i in 1:18){
ind<-which.max(tankCounts[i,5:7])
r1[i]<-log(tankCounts[i,ind+4]/48)/dates[ind]
ind<-which.max(tankCounts[i,5:8])
r2[i]<-log(tankCounts[i,ind+4]/48)/dates[ind]
ind<-which.max(tankCounts[i,5:9])
r3[i]<-log(tankCounts[i,ind+4]/48)/dates[ind]
}
tankCounts$r1<-r1
tankCounts$r2<-r2
tankCounts$r3<-r3
fit<-aov(COV~Copper*Diversity+Error(ID),
tankCounts)
summary(fit)
coef(fit)
fit2<-aov(r3~Copper*Diversity+Error(ID),
tankCounts)
summary(fit2)
coef(fit2)
setwd("C:/Users/Piumi/OneDrive/McGill Academics/2013-2014/Honours/Tox test")
library(MASS)
toxTestalt<-read.csv('toxTestalt.csv')
glmlist<-vector(mode="list",length=41)
doselist<-vector(mode="list",length=41)
for (i in 2:42){
tox.temp<-toxTest[complete.cases(toxTest[,i]),c(1,i)]
tox.temp<-tox.temp[-1,]
dead<-tox.temp[,2]
alive<-5-tox.temp[,2]
glmlist[[i-1]]<-glm(cbind(dead,alive) ~ log(tox.temp$Conc), family = binomial(link = "probit"))
doselist[[i-1]]<-dose.p(glmlist[[i-1]],1:2,c(0.1,0.5))
}
glmlist<-vector(mode="list",length=41)
doselist<-vector(mode="list",length=41)
for (i in 2:42){
tox.temp<-toxTestalt[complete.cases(toxTest[,i]),c(1,i)]
tox.temp<-tox.temp[-1,]
dead<-tox.temp[,2]
alive<-5-tox.temp[,2]
glmlist[[i-1]]<-glm(cbind(dead,alive) ~ log(tox.temp$Conc), family = binomial(link = "probit"))
doselist[[i-1]]<-dose.p(glmlist[[i-1]],1:2,c(0.1,0.5))
}
library(MASS)
toxTestalt<-read.csv('toxTestalt.csv')
glmlist<-vector(mode="list",length=41)
doselist<-vector(mode="list",length=41)
for (i in 2:42){
tox.temp<-toxTestalt[complete.cases(toxTestalt[,i]),c(1,i)]
tox.temp<-tox.temp[-1,]
dead<-tox.temp[,2]
alive<-5-tox.temp[,2]
glmlist[[i-1]]<-glm(cbind(dead,alive) ~ log(tox.temp$Conc), family = binomial(link = "probit"))
doselist[[i-1]]<-dose.p(glmlist[[i-1]],1:2,c(0.1,0.5))
}
lc50<-numeric(length=41)
lc50SE<-numeric(length=41)
lc10<-numeric(length=41)
lc10SE<-numeric(length=41)
for (i in 1:41){
lc50[i]<-exp(doselist[[i]][2])
lc50SE[i]<-attr(doselist[[i]],"SE")[2]
lc10[i]<-exp(doselist[[i]][1])
lc10SE[i]<-attr(doselist[[i]],"SE")[1]
}
diff<-lc50-lc10
ncol(toxTestalt)
lc50
names(toxTestalt)
View(toxTestalt)
mean(lc50[1,2])
mean(lc50[1],lc50[2])
mean.50<-c()
var.50<-c()
mean.10<-c()
var.10<-c()
i<-1
while(i<19){}
while(i<19){print(i)}
while(i<19){print(i);i<-i+2}
mean.50<-c()
var.50<-c()
mean.10<-c()
var.10<-c()
i<-1
while(i<19){}
i<-1
while(i<19){
mean.50<-c(mean.50,mean(lc50[i],lc50[i+1]))
var.50<-c(var.50,var(lc50[i],lc50[i+1]))
mean.10<-c(mean.10,mean(lc10[i],lc10[i+1]))
var.10<-c(var.10,var(lc10[i],lc10[i+1]))
i<-i+2
}
mean.50<-c(mean.50,lc50[19],mean(lc50[20],lc50[21],lc50[22]))
mean.10<-c(mean.10,lc10[19],mean(lc10[20],lc10[21],lc10[22]))
var.50<-c(var.50,lc50[19],var(lc50[20],lc50[21],lc50[22]))
var.10<-c(var.10,lc10[19],var(lc10[20],lc10[21],lc10[22]))
i<-23
while(i<33){
mean.50<-c(mean.50,mean(lc50[i],lc50[i+1]))
var.50<-c(var.50,var(lc50[i],lc50[i+1]))
mean.10<-c(mean.10,mean(lc10[i],lc10[i+1]))
var.10<-c(var.10,var(lc10[i],lc10[i+1]))
i<-i+2
}
mean.50<-c(mean.50,lc50[33],lc50[34],mean(lc50[35],lc50[36]),mean(lc50[37],lc50[38],lc50[39]),mean(lc50[40],lc50[41]))
mean.10<-c(mean.10,lc10[33],lc10[34],mean(lc10[35],lc10[36]),mean(lc10[37],lc10[38],lc10[39]),mean(lc10[40],lc10[41]))
var.50<-c(var.50,lc50[33],lc50[34],var(lc50[35],lc50[36]),var(lc50[37],lc50[38],lc50[39]),var(lc50[40],lc50[41]))
var.10<-c(var.10,lc10[33],lc10[34],var(lc10[35],lc10[36]),var(lc10[37],lc10[38],lc10[39]),var(lc10[40],lc10[41]))
mean.50
var.50
var(lc50[1],lc50[2])
var(lc50[1:2])
mean.50<-c()
var.50<-c()
mean.10<-c()
var.10<-c()
i<-1
while(i<19){
mean.50<-c(mean.50,mean(lc50[i:(i+1)]))
var.50<-c(var.50,var(lc50[i:(i+1)]))
mean.10<-c(mean.10,mean(lc10[i:(i+1)]))
var.10<-c(var.10,var(lc10[i:(i+1)]))
i<-i+2
}
mean.50<-c(mean.50,lc50[19],mean(lc50[20:22]))
mean.10<-c(mean.10,lc10[19],mean(lc10[20:22]))
var.50<-c(var.50,lc50[19],var(lc50[20:22]))
var.10<-c(var.10,lc10[19],var(lc10[20:22]))
i<-23
while(i<33){
mean.50<-c(mean.50,mean(lc50[i:(i+1)]))
var.50<-c(var.50,var(lc50[i:(i+1)]))
mean.10<-c(mean.10,mean(lc10[i:(i+1)]))
var.10<-c(var.10,var(lc10[i:(i+1)]))
i<-i+2
}
mean.50<-c(mean.50,lc50[33],lc50[34],mean(lc50[35:36]),mean(lc50[37:39]),mean(lc50[40:41]))
mean.10<-c(mean.10,lc10[33],lc10[34],mean(lc10[35:36]),mean(lc10[37:39]),mean(lc10[40:41]))
var.50<-c(var.50,lc50[33],lc50[34],var(lc50[35:36]),var(lc50[37:39]),var(lc50[40:41]))
var.10<-c(var.10,lc10[33],lc10[34],var(lc10[35:36]),var(lc10[37:39]),var(lc10[40:41]))
mean.50
var.50
toxTest<-read.csv('toxTest.csv')
sqrt(var.50)
LCalt<-data.frame(Type=rep(c("Pond","Lake"),c(12,9)),
Habitat=gsub('.[0-9]+',"",names(toxTest[3:23])),
Clone=names(toxTest[3:23]),
lc10=mean.10,
lc10SD=sqrt(var.10),
lc50=mean.50,
lc50SD=sqrt(var.50),
diff=mean.50-mean.10)
View(LCalt)
##make graph
data<-LCalt[,c(4,6)]
data<-t(data)
colnames(data)<-as.character(LCalt$Clone)
col<-c(rep(c("darkolivegreen2","forestgreen"),12),rep(c("cadetblue1","cornflowerblue"),9))
barplot(data, beside=TRUE, ylim=c(140,170),
xpd=FALSE, col=col,
las=2, ylab="Cu Concentration(ug/L)",
xlab="Clonal Line",cex.names = 0.7,
offset=0)
legend("topright",
c("LC10 Ponds","LC50 Ponds", "LC10 Lakes", "LC50 Lakes"),
fill=c("darkolivegreen2","forestgreen","cadetblue1","cornflowerblue"),
cex=0.7,
inset=0.01)
barplot(data, beside=TRUE, ylim=c(140,170),
xpd=FALSE, col=col,
las=2, ylab="Cu Concentration(ug/L)",
xlab="Clonal Line",cex.names = 0.7,
offset=0)
legend("topright",
c("LC10 Ponds","LC50 Ponds", "LC10 Lakes", "LC50 Lakes"),
fill=c("darkolivegreen2","forestgreen","cadetblue1","cornflowerblue"),
cex=0.5,
inset=0.01)
barplot(data, beside=TRUE, ylim=c(140,170),
xpd=FALSE, col=col,
las=2, ylab="Cu Concentration(ug/L)",
xlab="Clonal Line",cex.names = 0.7,
offset=0)
legend("topleft",
c("LC10 Ponds","LC50 Ponds", "LC10 Lakes", "LC50 Lakes"),
fill=c("darkolivegreen2","forestgreen","cadetblue1","cornflowerblue"),
cex=0.7,
inset=0.01)
LCalt$Type<-as.factor(LCalt$Type)
ponds<-subset(LC,Type=="Pond")
lakes<-subset(LC,Type=="Lake")
t.test(ponds$lc50,lakes$lc50,paired=FALSE) ##non signif
LCalt$Type<-as.factor(LCalt$Type)
ponds<-subset(LCalt,Type=="Pond")
lakes<-subset(LCalt,Type=="Lake")
t.test(ponds$lc50,lakes$lc50,paired=FALSE) ##non signif
shapiro.test(ponds$lc50) ##non-normal
shapiro.test(lakes$lc50) ##normal
leveneTest(lc50~Type,LCalt) ##variances equal
?leveneTest
??leveneTest
library(car)
leveneTest(lc50~Type,LCalt) ##variances equal
wilcox.test(ponds$lc50,lakes$lc50, paired=FALSE) ##signif diff
t.test(ponds$lc10,lakes$lc10,paired=FALSE) #non signif
shapiro.test(ponds$lc10) ##normal
shapiro.test(ponds$lc10) ##non-normal
shapiro.test(lakes$lc10) ##normal
leveneTest(lc10~Type,LCalt) ##variance equal
wilcox.test(ponds$lc10,lakes$lc10) ##non signif
LC1<-LCalt[-c(5,8,21),]
LC1$Habitat<-as.factor(LC1$Habitat)
LC1$Habitat<-droplevels(LC1$Habitat)
leveneTest(lc50~Habitat,LC1)
leveneTest(lc10~Habitat,LC1)
View(LC1)
View(LCalt)
oneway.test(lc50~Habitat, data=LC1, na.action=na.omit, var.equal=FALSE)
oneway.test(lc10~Habitat,LC1,var.equal = FALSE)
warnings()
sd(LCalt$lc50)
sd(LCalt$lc10)
sd(LCalt$diff)
mean(LCalt$diff)
fit2<-aov(r3~Diversity+Error(ID),
tankCounts)
summary(fit2)
fit<-aov(COV~Diversity+Error(ID),
tankCounts)
summary(fit)
summary(manova(cbind(COV,r3)~Diversity*ID,tankCounts))
View(tankCounts)
fit<-aov(COV~Diversity*ID,tankCounts)
summary(fit)
fit<-aov(r3~Diversity*ID,tankCounts)
summary(fit)
fit<-aov(r3~Diversity,tankCounts)
summary(fit)
summary(manova(cbind(COV,r3)~Diversity,tankCounts))
View(tankCounts)
summary(manova(cbind(COV,r3)~Diversity*ID,tankCounts))
fit<-aov(COV~Diversity*ID,tankCounts)
summary(fit)
fit<-aov(r3~Diversity*ID,tankCounts)
summary(fit)
fit<-aov(COV~Diversity*ID,tankCounts)
summary(fit)
TukeyHSD(fit)
fit<-aov(r3~Diversity*ID,tankCounts)
summary(fit)
TukeyHSD(fit)
fit<-aov(r3~Diversity+Error(ID),tankCounts)
summary(fit)
fit<-aov(r3~Diversity+Error(ID/Diversity),tankCounts)
summary(fit)
fit<-aov(r3~Diversity+Error(Diversity/ID),tankCounts)
summary(fit)
tankCounts$Copper<-c(seq(1,9,1),seq(1,9,1))
fit<-aov(COV~Diversity+Error(Copper),tankCounts)
summary(fit)
fit<-aov(r3~Diversity+Error(Copper),tankCounts)
summary(fit)
fit<-aov(COV~ID,tankCounts)
summary(fit)
fit<-aov(r3~ID,tankCounts)
summary(fit)
TukeyHSD(fit)
fit<-aov(r3~Diversity+Diversity:ID,tankCounts)
summary(fit)
fit<-aov(r3~Diversity+Diversity/ID,tankCounts)
summary(fit)
TukeyHSD(fit)
TukeyHSD(fit,"Diversity")
summary(manova(cbind(COV,r3)~Diversity+Diversity/ID,tankCounts))
fit<-aov(COV~Diversity+Diversity/ID,tankCounts)
summary(fit)
fit<-aov(r3~Diversity+Diversity/ID,tankCounts)
summary(fit)
TukeyHSD(fit,"Diversity")
fit<-aov(COV~Diversity+Diversity/ID,tankCounts)
summary(fit)
fit<-aov(r3~Diversity+Diversity/ID,tankCounts)
summary(fit)
View(tankCounts)
t.test(r3~Copper,tankCounts,paired=TRUE)
rep(c("no","yes"),9)
rep(c("no","yes"),c(9,9))
tankCounts$Copper<-rep(c("no","yes"),c(9,9))
View(tankCounts)
t.test(r3~Copper,tankCounts,paired=TRUE)
TukeyHSD(fit)
fit<-aov(r3~Diversity+Error(ID),tankCounts)
summary(fit)
fit<-aov(COV~Diversity+Error(ID),tankCounts)
summary(fit)
pf(q=0.002033/0.006044,df1=6,df2=9,lower.tail = F)
fit<-aov(COV~Diversity+Error(ID),tankCounts)
summary(fit)
TukeyHSD(fit)
library(TukeyC)
install.packages("TukeyC")
library(TukeyC)
tuk = TukeyC(Data,
model = 'COV ~ Diversity + Error(ID)',
error = 'ID',
which = 'Diversity',
fl1=1,
sig.level = 0.05
)
tuk = TukeyC(tankCounts,
model = 'COV ~ Diversity + Error(ID)',
which = 'Diversity',
error = 'ID',
fl1=1,
sig.level = 0.05
)
summary(tuk)
tuk = TukeyC(tankCounts,
model = 'r3 ~ Diversity + Error(ID)',
error = 'ID',
which = 'Diversity',
fl1=1,
sig.level = 0.05
)
summary(tuk)
fit<-aov(r3~Diversity+Error(ID),tankCounts)
summary(fit)
fit<-aov(COV~Diversity+Error(ID),tankCounts)
summary(fit)
0.010792/0.002033
0.002033/0.006044
pf(q=0.002033/0.006044,df1=6,df2=9,lower.tail = F)
fit<-aov(r3~Diversity+Error(ID),tankCounts)
summary(fit)
0.006246/4.728e-05
pf(q=0.006246/4.728e-05,df1=6,df2=9,lower.tail = F)
